{
	"info": {
		"_postman_id": "e80dcb5f-34f8-4b52-83cb-ce96082f9c31",
		"_postman_id": "6418ac6e-a797-4e30-b4d3-a1dd0cdead22",
		"name": "Project API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Project Attachments",
			"item": [
				{
					"name": "bookmarks",
					"item": [
						{
							"name": " Create project without bookmarks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": " Create project with valid bookmarks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"bookmarks\":[{\n            \"title\":\"title1\",\n            \"address\":\"address1\"\n        },{\n            \"title\":\"title2\",\n            \"address\":\"address2\"\n        }],\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": " Create project with invalid bookmarks",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"bookmarks\":[{\n            \"title\":\"title1\",\n            \"invalid\":3,\n            \"address\":\"address1\"\n        },{\n            \"title\":\"title2\",\n            \"address\":\"address2\"\n        }],\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						},
						{
							"name": "get  project",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update project with bookmarks",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name\",\n         \"bookmarks\":[{\n            \"title\":\"title1\",\n            \"address\":\"address1\"\n        },{\n            \"title\":\"title2\",\n            \"address\":\"address2\"\n        }]\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete project all bookmarks null",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name2\",\n         \"bookmarks\":null\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update  project with invalid bookmarks",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name2\",\n         \"bookmarks\":3\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get projects with admin token",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Upload file attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"fileAttachmentId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"first file attachment\",\n\t\"path\": \"/home/files/phoenix/a.png\",\n\t\"type\": \"file\",\n\t\"s3Bucket\": \"topcoder-project-service\",\n\t\"contentType\": \"application/png\",\n\t\"tags\": [\"design preview\"]\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments"
							]
						},
						"description": "Create an project attachment"
					},
					"response": []
				},
				{
					"name": "Create link as attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"linkAttachmentId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"link attachment\",\n\t\"path\": \"https://connect.topcoder-dev.com/projects/8600/assets.zip\",\n\t\"type\": \"link\",\n\t\"tags\": [\"specification\", \"design preview\", \"billing information\"]\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments"
							]
						},
						"description": "Create an project attachment"
					},
					"response": []
				},
				{
					"name": "Update file attachment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"title\": \"first attachment submission updated\",\n\t\t\"description\": \"updated project attachment\",\n\t\t\"tags\": [\"anotherTag\"]\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{fileAttachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{fileAttachmentId}}"
							]
						},
						"description": "Update project attachment"
					},
					"response": []
				},
				{
					"name": "Update link attachment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"title\": \"updated link title\",\n\t\t\"description\": \"updated link description\",\n\t\t\"tags\": [\"linkTag1\"]\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{linkAttachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{linkAttachmentId}}"
							]
						},
						"description": "Update project attachment"
					},
					"response": []
				},
				{
					"name": "Get file attachment",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{fileAttachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{fileAttachmentId}}"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				},
				{
					"name": "Get link attachment",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{linkAttachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{linkAttachmentId}}"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				},
				{
					"name": "List attachments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				},
				{
					"name": "Delete link attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{linkAttachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{linkAttachmentId}}"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				},
				{
					"name": "Delete file attachment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/attachments/{{fileAttachmentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"attachments",
								"{{fileAttachmentId}}"
							]
						},
						"description": "Delete a project attachment"
					},
					"response": []
				}
			]
		},
		{
			"name": "Project With TemplateId issue",
			"item": [
				{
					"name": "Create project with templateId (not existed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project with templateId\",\n\t\t\"description\": \"Hello I am a test project with templateId\",\n\t\t\"type\": \"generic\",\n\t\t\"templateId\": 3000\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project with templateId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test project with templateId\",\n    \"description\": \"Hello I am a test project with templateId\",\n    \"type\": \"generic\",\n    \"templateId\": {{projectTemplateId}}\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Members",
			"item": [
				{
					"name": "Create project member with no payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "Request payload is mandatory while creating project. If no request payload is specified this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project copilot with invalid userId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "Certain fields are mandatory while creating project. If invalid fields are specified this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project copilot with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"memberId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid, than project member should be created."
					},
					"response": []
				},
				{
					"name": "Create project member, if user already registered",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid and user is already registered with the specified role than this should result in 400."
					},
					"response": []
				},
				{
					"name": "Create project manager with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"memberId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"manager\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid, than project manager should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Create project customer with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"memberId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Create project member with no payload and return member details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"memberId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members?fields=id,userId,role,isPrimary,deletedAt,createdAt,updatedAt,deletedBy,createdBy,updatedBy,handle,photoURL,workingHourStart,workingHourEnd,timeZone,email",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,userId,role,isPrimary,deletedAt,createdAt,updatedAt,deletedBy,createdBy,updatedBy,handle,photoURL,workingHourStart,workingHourEnd,timeZone,email"
								}
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Update project member",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\",\n\t\"isPrimary\": true\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "Update project member with isPrimary False",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\",\n\t\"isPrimary\": false\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "wrong role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\t\"role\": \"wrong\"\n } "
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List project members with roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members?role=customer",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							],
							"query": [
								{
									"key": "role",
									"value": "customer"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "Get project member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Delete a project's member"
					},
					"response": []
				},
				{
					"name": "Delete project member",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						},
						"description": "Delete a project's member"
					},
					"response": []
				},
				{
					"name": "editing project member roles & primary option",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"role\": \"manager\",\n    \"isPrimary\": true\n } "
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Members Invites",
			"item": [
				{
					"name": "List project member invite",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project member with no payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites"
							]
						},
						"description": "Request payload is mandatory while creating project. If no request payload is specified this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project customer with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"inviteId2\", pm.response.json().success[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"customer\",\n\t\"emails\": [\"test@topcoder.com\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Create member invites with handles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"inviteId\", pm.response.json().success[0].id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\",\n\t\"handles\": [\"test_copilot1\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create member invites with wrong roles",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"manager\",\n\t\"handles\": [\"test_copilot1\", \"test_user1\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project member invite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites/{{inviteId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites",
								"{{inviteId}}"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "Update project member invite",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"accepted\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites/{{inviteId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites",
								"{{inviteId}}"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				},
				{
					"name": "Update project member invite - wrong status",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n\t\"status\": \"wrong\"\n } ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites/{{inviteId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites",
								"{{inviteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project member invite - wrong user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member2-40051335}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"accepted\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites/{{inviteId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites",
								"{{inviteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel project member invite",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/invites/{{inviteId2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"invites",
								"{{inviteId2}}"
							]
						},
						"description": "Update a project's member."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Create project without payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Request body is mandatory while creating project. If invalid request body is supplied this should return 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project without valid name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Certain fields are mandatory while creating project. If invalid request body is supplied this should return 400 status code."
					},
					"response": []
				},
				{
					"name": "Create project with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create project by inactive user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer userId_{{inactive-userId}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Get project by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned."
					},
					"response": []
				},
				{
					"name": "Get project by id and request specific fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}?fields=id,name,description,members.id,members.projectId",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,name,description,members.id,members.projectId"
								}
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned. Only those fields which are specified should be returned."
					},
					"response": []
				},
				{
					"name": "List projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List projects with perPage and page",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?perPage=1&page=1",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "perPage",
									"value": "1"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "List all the project with no filter. Limit of 1 and offset of 1 is applied"
					},
					"response": []
				},
				{
					"name": "List projects with type filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?type=generic",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "type",
									"value": "generic"
								}
							]
						},
						"description": "List all the project with filters applied. The filter string should be url encoded. Default limit and offset is applicable"
					},
					"response": []
				},
				{
					"name": "List projects with id filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?id=1&id=2",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								},
								{
									"key": "id",
									"value": "2"
								}
							]
						},
						"description": "List all the project with filters applied. The filter string should be url encoded. Default limit and offset is applicable"
					},
					"response": []
				},
				{
					"name": "List projects with sort applied",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?sort=type asc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "sort",
									"value": "type asc"
								}
							]
						},
						"description": "List all the project with custom sort and no filter. Default sort and limits are applied. The sort string has to be url encoded. Sort is of type `key asc|desc`"
					},
					"response": []
				},
				{
					"name": "List projects and return specific fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects?fields=id,name,description",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "fields",
									"value": "id,name,description"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied. The fields to return is specified as comma separated list. Only those fields should be returned."
					},
					"response": []
				},
				{
					"name": "List projects with copilot token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE project by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Delete a project by id"
					},
					"response": []
				},
				{
					"name": "Update project",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"project name updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				},
				{
					"name": "Update project 403",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"project name updated\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project name. If user don't have permission to the project than it should return 403."
					},
					"response": []
				},
				{
					"name": "Update project 404",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"project name updated\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project name. If project is not found than this result in 404 status code."
					},
					"response": []
				},
				{
					"name": "Update project status to in review",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"in_review\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Update project status to reviewed",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"reviewed\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Update project status to paused",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"paused\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Update project status to cancelled with cancelReason",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"cancelled\",\n    \"cancelReason\": \"price/cost\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status. While cancelling the project `cancelReason` is mandatory."
					},
					"response": []
				},
				{
					"name": "Update project status to cancelled",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"status\": \"cancelled\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status. While cancelling the project `cancelReason` is mandatory. If no `cancelReason` is supplied this should result in 400 status code."
					},
					"response": []
				},
				{
					"name": "Update project status to completed",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"status\": \"completed\"\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project status."
					},
					"response": []
				},
				{
					"name": "Move project out of cancel state.",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"status\": \"active\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Move a project out of cancel state. Only admin and manager is allowed to do so."
					},
					"response": []
				},
				{
					"name": "Move project out of cancel state 403",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"status\": \"active\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Move a project out of cancel state. Only admin and manager is allowed to do so."
					},
					"response": []
				},
				{
					"name": "Update project details",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"details\": {\n      \"summary\": \"project name updated\"\n    }\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project details. This should fire specification modified event"
					},
					"response": []
				},
				{
					"name": "Update project bookmarks",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookmarks\": [\n      {\n        \"title\": \"test\",\n        \"address\": \"http://topcoder.com\"\n      }\n    \n    ]\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						},
						"description": "Update the project bookmarks. This should fire project link created event"
					},
					"response": []
				},
				{
					"name": "launch a project by topcoder managers ",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"updatedProject name\",\n         \"status\": \"active\"\n    }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "launch a project by member",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"updatedProject name\",\n         \"status\": \"active\"\n    }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "launch a project by copilot",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"updatedProject name\",\n         \"status\": \"active\"\n    }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				}
			],
			"description": "Requests for all things projects."
		},
		{
			"name": "Workstream",
			"item": [
				{
					"name": "Create workstream without payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams"
							]
						},
						"description": "Request body is mandatory while creating project. If invalid request body is supplied this should return 422 status code."
					},
					"response": []
				},
				{
					"name": "Create workstream with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"workStreamId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project\",\n\t\t\"type\": \"generic\",\n\t\t\"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create workstream by inactive user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer userId_{{inactive-userId}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project\",\n\t\t\"description\": \"Hello I am a test project\",\n\t\t\"type\": \"generic\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Get workstream by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}"
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned."
					},
					"response": []
				},
				{
					"name": "List workstreams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "DELETE workstream by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}"
							]
						},
						"description": "Delete a project by id"
					},
					"response": []
				},
				{
					"name": "Update workstream",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project - updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				}
			],
			"description": "Requests for all things projects."
		},
		{
			"name": "Work",
			"item": [
				{
					"name": "Create work without payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works"
							]
						},
						"description": "Request body is mandatory while creating project. If invalid request body is supplied this should return 422 status code."
					},
					"response": []
				},
				{
					"name": "Create work with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"workId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project phase\",\n\t\t\"status\": \"active\",\n\t\t\"startDate\": \"2018-05-16T00:00:00\",\n\t\t\"endDate\": \"2018-05-17T00:00:00\",\n\t\t\"order\": 1,\n\t\t\"budget\": 20,\n\t\t\"details\": {\n\t\t\t\"aDetails\": \"a details\"\n\t\t}\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create work - 403",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member-40051331}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project phase\",\n\t\t\"status\": \"active\",\n\t\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\t\"order\": 2,\n\t\t\"budget\": 20,\n\t\t\"details\": {\n\t\t\t\"aDetails\": \"a details\"\n\t\t}\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create work by inactive user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer userId_{{inactive-userId}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project\",\n\t\t\"description\": \"Hello I am a test project\",\n\t\t\"type\": \"generic\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Get work by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}"
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned."
					},
					"response": []
				},
				{
					"name": "List works",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List works - sort",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works?sort=startDate desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works"
							],
							"query": [
								{
									"key": "sort",
									"value": "startDate desc"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List works - fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works?fields=status,name,budget",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works"
							],
							"query": [
								{
									"key": "fields",
									"value": "status,name,budget"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "DELETE work by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}"
							]
						},
						"description": "Delete a project by id"
					},
					"response": []
				},
				{
					"name": "Update work",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project phase 11\",\n\t\t\"status\": \"active\",\n\t\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\t\"budget\": 24,\n\t\t\"order\": 2\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				},
				{
					"name": "Update work 403",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project - updated\",\n\t\t\"type\": \"generic\",\n\t\t\"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}"
							]
						},
						"description": "Update the project name. If user don't have permission to the project than it should return 403."
					},
					"response": []
				}
			],
			"description": "Requests for all things projects."
		},
		{
			"name": "Work Item",
			"item": [
				{
					"name": "Create work item without payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/workstreams/{{workStreamId}}/works/{{workId}}/workitems",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}",
								"workitems"
							]
						},
						"description": "Request body is mandatory while creating project. If invalid request body is supplied this should return 422 status code."
					},
					"response": []
				},
				{
					"name": "Create work item with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"itemId\", pm.response.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"work item - phase product\",\n\t\t\"type\": \"type 1\",\n\t\t\"estimatedPrice\": 12\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}/workitems",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}",
								"workitems"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create work item by inactive user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer userId_{{inactive-userId}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project\",\n\t\t\"description\": \"Hello I am a test project\",\n\t\t\"type\": \"generic\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}/workitems",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}",
								"workitems"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Get work item by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}/workitems/{{itemId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}",
								"workitems",
								"{{itemId}}"
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned."
					},
					"response": []
				},
				{
					"name": "List work items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}/workitems",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}",
								"workitems"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "DELETE work item by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}/workitems/{{itemId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}",
								"workitems",
								"{{itemId}}"
							]
						},
						"description": "Delete a project by id"
					},
					"response": []
				},
				{
					"name": "Update work item",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"work item - updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId}}/works/{{workId}}/workitems/{{itemId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId}}",
								"works",
								"{{workId}}",
								"workitems",
								"{{itemId}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				}
			],
			"description": "Requests for all things projects."
		},
		{
			"name": "Work Management Permission",
			"item": [
				{
					"name": "Create work management permission without payload",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							]
						},
						"description": "Request body is mandatory while creating project. If invalid request body is supplied this should return 422 status code."
					},
					"response": []
				},
				{
					"name": "Create work management permission with valid values 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"workManagementPermissionId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"policy\": \"work.new.create\",\n      \"permission\": {\n        \"allowRule\": {\n          \"projectRoles\": [\"customer\", \"copilot\"],\n          \"topcoderRoles\": [\"Connect Manager\", \"Connect Admin\", \"administrator\"]\n        },\n        \"denyRule\": { \"projectRoles\": [\"copilot\"] }\n      },\n      \"projectTemplateId\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create work management permission with valid values 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"workManagementPermissionId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"policy\": \"work.new.create\",\n      \"permission\": {\n        \"allowRule\": {\n          \"projectRoles\": [\"customer\", \"copilot\"],\n          \"topcoderRoles\": [\"Connect Manager\", \"Connect Admin\", \"administrator\"]\n        },\n        \"denyRule\": { \"projectRoles\": [\"copilot\"] }\n      },\n      \"projectTemplateId\": 2\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create work management permission by inactive user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer userId_{{inactive-userId}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"policy\": \"work.create\",\n      \"permission\": {\n        \"allowRule\": {\n          \"projectRoles\": [\"customer\", \"copilot\"],\n          \"topcoderRoles\": [\"Connect Manager\", \"Connect Admin\", \"administrator\"]\n        },\n        \"denyRule\": { \"projectRoles\": [\"copilot\"] }\n      },\n      \"projectTemplateId\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Get work management permission by id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission/{{workManagementPermissionId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission",
								"{{workManagementPermissionId}}"
							]
						},
						"description": "Get a project by id. project members and attachments should also be returned."
					},
					"response": []
				},
				{
					"name": "List work management permissions - filter required",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List work management permissions - missing filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission?filter=template",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							],
							"query": [
								{
									"key": "filter",
									"value": "template"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List work management permissions - invalid filter",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission?filter=invalid%3D2%26projectTemplateId%3D1",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							],
							"query": [
								{
									"key": "filter",
									"value": "invalid%3D2%26projectTemplateId%3D1"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "List work management permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission?filter=projectTemplateId%3D1",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission"
							],
							"query": [
								{
									"key": "filter",
									"value": "projectTemplateId%3D1"
								}
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "Update work management permission",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"policy\": \"work.new.delete\",\n      \"permission\": {\n        \"allowRule\": {\n          \"projectRoles\": [\"customer\", \"copilot\"],\n          \"topcoderRoles\": [\"Connect Manager\", \"Connect Admin\", \"administrator\"]\n        },\n        \"denyRule\": { \"projectRoles\": [\"copilot\"] }\n      },\n      \"projectTemplateId\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission/{{workManagementPermissionId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission",
								"{{workManagementPermissionId}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				},
				{
					"name": "Delete work management permission by id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/workManagementPermission/{{workManagementPermissionId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"workManagementPermission",
								"{{workManagementPermissionId}}"
							]
						},
						"description": "Delete a project by id"
					},
					"response": []
				}
			],
			"description": "Requests for all things projects."
		},
		{
			"name": "Permissions",
			"item": [
				{
					"name": "Get permissions - 404",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/9999/permissions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"9999",
								"permissions"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "Create project invite for customer with valid values",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"userIds\": [40051331],\n\t\t\"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Update project invite to accept invite",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member-40051331}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"userId\": 40051331,\n\t\t\"status\": \"accepted\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Get permissions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/permissions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"permissions"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				},
				{
					"name": "Get permissions - manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-manager-40051334}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/permissions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"permissions"
							]
						},
						"description": "List all the project with no filter. Default sort and limits are applied."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "WorkManagementForTemplate",
			"item": [
				{
					"name": "Create workstream with valid values",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"workStreamId1\", pm.response.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project\",\n\t\t\"type\": \"generic\",\n\t\t\"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Create project invite for customer with valid values",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"userIds\": [40051331],\n\t\t\"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Update project invite to accept invite",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member-40051331}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"userId\": 40051331,\n\t\t\"status\": \"accepted\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/invite",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"invite"
							]
						},
						"description": "If the request payload is valid, than project customer should be added. This should sync with the direct project is project is associated with direct project."
					},
					"response": []
				},
				{
					"name": "Update work stream - no match allowRule",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"work item - updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId1}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId1}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				},
				{
					"name": "Update work stream - allow access",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-connectAdmin-40051336}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"work item - updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId1}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId1}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				},
				{
					"name": "Update work stream - allow access with ProjectRoles",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member-40051331}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"work item - updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/workstreams/{{workStreamId1}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"workstreams",
								"{{workStreamId1}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				},
				{
					"name": "Create workstream with valid values - Project 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"workStreamId2\", pm.response.json().id);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project\",\n\t\t\"type\": \"generic\",\n\t\t\"status\": \"active\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/2/workstreams",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"2",
								"workstreams"
							]
						},
						"description": "Valid request body. Project should be created successfully."
					},
					"response": []
				},
				{
					"name": "Update work item - allow access",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-manager-40051334}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"test project - updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/2/workstreams/{{workStreamId2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"2",
								"workstreams",
								"{{workStreamId2}}"
							]
						},
						"description": "Update the project name. If user don't have permission to the project than it should return 403."
					},
					"response": []
				},
				{
					"name": "Update workstream - deny access",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"name\": \"work item - updated\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/2/workstreams/{{workStreamId2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"2",
								"workstreams",
								"{{workStreamId2}}"
							]
						},
						"description": "Update the project name. Name should be updated successfully."
					},
					"response": []
				}
			],
			"description": "Requests for all things projects."
		},
		{
			"name": "EventHandling and Integration with Direct Project API",
			"item": [
				{
					"name": "mock direct projects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.topcoder-dev.com/v3/direct/projects",
							"protocol": "https",
							"host": [
								"api",
								"topcoder-dev",
								"com"
							],
							"path": [
								"v3",
								"direct",
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": " Create direct project when a new project is successfully created",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"type\": \"generic\",\n        \"description\": \"test project\",\n        \"details\": {},\n        \"billingAccountId\": 123,\n        \"name\": \"test project1\"\n      }"
						},
						"url": {
							"raw": "{{api-url}}/projects",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Response error from direct project service",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n        \"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": " Add co-pilot when a co-pilot is added to a project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"role\": \"copilot\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "remove copilot from direct project when editing project member role",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"role\": \"customer\",\n    \"isPrimary\": true\n } "
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": " Sync billing account id with direct",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"billingAccountId\": 9999, \n        \"name\": \"new project name\"\n      }"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete co-pilot when a co-pilot is removed from  a project",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/members/{{memberId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"members",
								"{{memberId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Project Phase",
			"item": [
				{
					"name": "Before Start",
					"item": [
						{
							"name": "Create project type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectTypeId\", response.key);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"key\": \"new key\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"http://example.com/icon4.ico\",\r\n    \t\"question\": \"question 4\",\r\n    \t\"info\": \"info 4\",\r\n    \t\"aliases\": [\"key-41\", \"key_42\"],\r\n    \t\"metadata\": {}\r\n  }"
								},
								"url": {
									"raw": "{{api-url}}/projects/metadata/projectTypes",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"metadata",
										"projectTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								},
								"description": "Valid request body. Project should be created successfully."
							},
							"response": []
						},
						{
							"name": "Create project member - 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseMemberId-1\", response.userId);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"40158994\",\n    \"role\": \"copilot\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						},
						{
							"name": "Create project member - 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseMemberId-2\", response.userId);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"40153800\",\n    \"role\": \"copilot\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Phase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Phase with order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseId-2\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t},\n\t\"order\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Phase with productTemplateId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseId-3\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t},\n\t\"order\": 1,\n\t\"productTemplateId\": 2\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Phase with members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseId-4\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t},\n    \"members\": [{{phaseMemberId-1}},{{phaseMemberId-2}}]\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with fields",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?fields=status,name,budget",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "fields",
									"value": "status,name,budget"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with members field",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?fields=status,name,budget,members,products",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "fields",
									"value": "status,name,budget,members,products"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with approvals field",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?fields=status,name,budget,members,products,approvals",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "fields",
									"value": "status,name,budget,members,products,approvals"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with sort",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?sort=status desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "sort",
									"value": "status desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with sort by order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?sort=order desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "sort",
									"value": "order desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with memberOnly",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?memberOnly=true",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "memberOnly",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Phase",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase with order",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t},\n\t\"order\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase with members",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t},\n    \"members\": [{{phaseMemberId-1}},{{phaseMemberId-2}}]\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Delete Phase",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"phaseIds\": [\r\n        {{phaseId-2}},\r\n        {{phaseId-3}},\r\n        {{phaseId-4}}\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Phase Products",
			"item": [
				{
					"name": "Create Phase Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseProductId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test phase product\",\n\t\"type\": \"type 1\",\n\t\"estimatedPrice\": 10,\n    \"templateId\": 2,\n    \"actualPrice\": \"10\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Phase Product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase Product",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test phase product xxx\",\n\t\"type\": \"type 2\",\n\t\"templateId\": 10,\n\t\"estimatedPrice\": 1.234567,\n\t\"actualPrice\": 2.34567,\n\t\"details\": {\n\t\t\"message\": \"this is a JSON type. You can use any json\"\n\t}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase Product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Phase Members",
			"item": [
				{
					"name": "Before Start",
					"item": [
						{
							"name": "Create project type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectTypeId\", response.key);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"key\": \"new key\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"http://example.com/icon4.ico\",\r\n    \t\"question\": \"question 4\",\r\n    \t\"info\": \"info 4\",\r\n    \t\"aliases\": [\"key-41\", \"key_42\"],\r\n    \t\"metadata\": {}\r\n  }"
								},
								"url": {
									"raw": "{{api-url}}/projects/metadata/projectTypes",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"metadata",
										"projectTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								},
								"description": "Valid request body. Project should be created successfully."
							},
							"response": []
						},
						{
							"name": "Create project member - 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseMemberId-1\", response.userId);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"40158994\",\n    \"role\": \"copilot\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						},
						{
							"name": "Create project member - 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseMemberId-2\", response.userId);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"40153800\",\n    \"role\": \"copilot\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						},
						{
							"name": "Create Phase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t}\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/phases",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"phases"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Phase Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?sort=order desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "sort",
									"value": "order desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase with memberOnly",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases?memberOnly=true",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							],
							"query": [
								{
									"key": "memberOnly",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/members/{{phaseMemberId-2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"members",
								"{{phaseMemberId-2}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Phase Approvals",
			"item": [
				{
					"name": "Before Start",
					"item": [
						{
							"name": "Create project type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectTypeId\", response.key);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"key\": \"new key\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"http://example.com/icon4.ico\",\r\n    \t\"question\": \"question 4\",\r\n    \t\"info\": \"info 4\",\r\n    \t\"aliases\": [\"key-41\", \"key_42\"],\r\n    \t\"metadata\": {}\r\n  }"
								},
								"url": {
									"raw": "{{api-url}}/projects/metadata/projectTypes",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"metadata",
										"projectTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								},
								"description": "Valid request body. Project should be created successfully."
							},
							"response": []
						},
						{
							"name": "Create project customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"88774634\",\n    \"role\": \"customer\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						},
						{
							"name": "Create Phase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t}\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/phases",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"phases"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Phase Approval - approve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t}\n}"

						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase with order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-topcoder-user-88774634}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t},\n\t\"order\": 1\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",

							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{

					"name": "Update Phase with members",
					"request": {
						"method": "PATCH",

						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],

						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test project phase xxx\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-14T00:00:00\",\n\t\"endDate\": \"2018-05-15T00:00:00\",\n\t\"budget\": 30,\n\t\"progress\": 15,\n\t\"details\": {\n\t\t\"message\": \"phase details\"\n\t},\n    \"members\": [{{phaseMemberId-1}},{{phaseMemberId-2}}]\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",

							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",

								"{{phaseId}}"

							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase",

					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{

					"name": "Bulk Delete Phase",

					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"phaseIds\": [\r\n        {{phaseId-2}},\r\n        {{phaseId-3}},\r\n        {{phaseId-4}}\r\n    ]\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Phase Products",
			"item": [
				{
					"name": "Create Phase Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"phaseProductId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test phase product\",\n\t\"type\": \"type 1\",\n\t\"estimatedPrice\": 10,\n    \"templateId\": 2,\n    \"actualPrice\": \"10\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase Products",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Phase Product",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase Product",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"test phase product xxx\",\n\t\"type\": \"type 2\",\n\t\"templateId\": 10,\n\t\"estimatedPrice\": 1.234567,\n\t\"actualPrice\": 2.34567,\n\t\"details\": {\n\t\t\"message\": \"this is a JSON type. You can use any json\"\n\t}\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase Product",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/products/{{phaseProductId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"products",
								"{{phaseProductId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Phase Members",
			"item": [
				{
					"name": "Before Start",
					"item": [
						{
							"name": "Create project type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectTypeId\", response.key);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"key\": \"new key\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"http://example.com/icon4.ico\",\r\n    \t\"question\": \"question 4\",\r\n    \t\"info\": \"info 4\",\r\n    \t\"aliases\": [\"key-41\", \"key_42\"],\r\n    \t\"metadata\": {}\r\n  }"
								},
								"url": {
									"raw": "{{api-url}}/projects/metadata/projectTypes",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"metadata",
										"projectTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								},
								"description": "Valid request body. Project should be created successfully."
							},
							"response": []
						},
						{
							"name": "Create project member - 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseMemberId-1\", response.userId);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"40158994\",\n    \"role\": \"copilot\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						},
						{
							"name": "Create project member - 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseMemberId-2\", response.userId);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"40153800\",\n    \"role\": \"copilot\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						},
						{
							"name": "Create Phase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"active\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t}\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/phases",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"phases"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Phase Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"userIds\": [{{phaseMemberId-1}},{{phaseMemberId-2}}]\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/members",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"members"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Phase Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/members/{{phaseMemberId-2}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"members",
								"{{phaseMemberId-2}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Phase Approvals",
			"item": [
				{
					"name": "Before Start",
					"item": [
						{
							"name": "Create project type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectTypeId\", response.key);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"key\": \"new key\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"http://example.com/icon4.ico\",\r\n    \t\"question\": \"question 4\",\r\n    \t\"info\": \"info 4\",\r\n    \t\"aliases\": [\"key-41\", \"key_42\"],\r\n    \t\"metadata\": {}\r\n  }"
								},
								"url": {
									"raw": "{{api-url}}/projects/metadata/projectTypes",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"metadata",
										"projectTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create project",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"projectId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project\",\n\t\"description\": \"Hello I am a test project\",\n\t\"type\": \"{{projectTypeId}}\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects"
									]
								},
								"description": "Valid request body. Project should be created successfully."
							},
							"response": []
						},
						{
							"name": "Create project customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"88774634\",\n    \"role\": \"customer\"\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/members",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"members"
									]
								},
								"description": "If the request payload is valid, than project member should be created."
							},
							"response": []
						},
						{
							"name": "Create Phase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"    if(pm.response.status === \"Created\") {",
											"        const response = pm.response.json()",
											"        pm.environment.set(\"phaseId\", response.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"test project phase\",\n\t\"status\": \"in_review\",\n\t\"startDate\": \"2018-05-15T00:00:00\",\n\t\"endDate\": \"2018-05-16T00:00:00\",\n\t\"budget\": 20,\n\t\"details\": {\n\t\t\"aDetails\": \"a details\"\n\t}\n}"
								},
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/phases",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"phases"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Phase Approval - approve",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-topcoder-user-88774634}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"decision\": \"approve\",\n    \"comment\": \"good\",\n    \"startDate\": \"2021-08-02\",\n    \"endDate\": \"2021-08-03\",\n    \"expectedEndDate\": \"2021-08-03\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/approvals",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"approvals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Phase",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"status\": \"in_review\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Phase Approval - approve Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-topcoder-user-88774634}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"decision\": \"reject\",\n    \"comment\": \"bad\",\n    \"startDate\": \"2021-08-03\",\n    \"endDate\": \"2021-08-04\",\n    \"expectedEndDate\": \"2021-08-05\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/approvals",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"approvals"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Phase Approvals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/phases/{{phaseId}}/approvals",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"phases",
								"{{phaseId}}",
								"approvals"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Templates",
			"item": [
				{
					"name": "Create project template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],

						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\"\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with form, priceConfig, planConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],

						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with only form key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"dev\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with wrong form key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"wrong-key\"\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"question\": \"question 1\",\r\n    \"info\": \"info 1\",\r\n    \"aliases\": [\"key-1\", \"key_1\"],\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1123\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1123\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"dev\",\r\n    \t\"version\": 1123\r\n    }\r\n  }"
						},

						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a project template with from, priceConfig, planConfig",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 2\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"qa\",\t\r\n    \t \"version\": 2\t\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a project template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1234\r\n    },\r\n    \"priceConfig\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1234\r\n    },\r\n    \"planConfig\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t \"version\": 1234\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a project template without define form, priceConfig, planConfig",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project template",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\",\r\n      \"scope2\": [\"a\"]\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\",\r\n      \"phase2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project template with define form, priceConfig, planConfig",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n    \"form\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1\r\n    },\r\n    \"priceConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1\r\n    },\r\n    \"planConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project template with wrong form, priceConfig, planConfig",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"app\",\r\n    \"subCategory\":\"app\",\r\n    \"metadata\":{},\r\n\t\"form\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1123\r\n    },\r\n    \"priceConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1123\r\n    },\r\n    \"planConfig\": {\r\n        \"key\": \"dev\",\r\n        \"version\": 1123\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"new category\",\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\",\r\n      \"scope2\": [\"a\"]\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\",\r\n      \"phase2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTemplates/{{projectTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTemplates",
								"{{projectTemplateId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product Templates",
			"item": [
				{
					"name": "Create product template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"productTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"{{productCategoryId}}\",\r\n    \"subCategory\": \"app\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"template\": {\r\n      \"template1\": {\r\n        \"name\": \"template 1\",\r\n        \"details\": {\r\n          \"anyDetails\": \"any details 1\"\r\n        },\r\n        \"others\": [\"others 11\", \"others 12\"]\r\n      },\r\n      \"template2\": {\r\n        \"name\": \"template 2\",\r\n        \"details\": {\r\n          \"anyDetails\": \"any details 2\"\r\n        },\r\n        \"others\": [\"others 21\", \"others 22\"]\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product template with form",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"productTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"key1\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"form\": {\r\n\t\t\"key\": \"dev\",\r\n\t\t\"version\": 1\r\n\t}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product template with wrong form key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"key1\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"form\": {\r\n\t\t\"key\": \"wrong-key\"\r\n\t}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create product template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name 1\",\r\n    \"productKey\": \"productKey 1\",\r\n    \"category\": \"key1\",\r\n    \"icon\": \"http://example.com/icon1.ico\",\r\n    \"brief\": \"brief 1\",\r\n    \"details\": \"details 1\",\r\n    \"aliases\": [\"product key 1\", \"product_key_1\"],\r\n    \"form\": {\r\n\t\t\"key\": \"dev\",\r\n\t\t\"version\": 1123\r\n\t}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "List product templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product template",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"productKey\":\"new productKey\",\r\n    \"category\":\"key1\",\r\n    \"icon\":\"http://example.com/icon-new.ico\",\r\n    \"brief\": \"new brief\",\r\n    \"details\": \"new details\",\r\n    \"aliases\":{\r\n      \"alias1\":\"scope 1\",\r\n      \"alias2\": [\"a\"]\r\n    },\r\n    \"template\":{\r\n      \"template1\":\"template 1\",\r\n      \"template2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product template",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a product template with form",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t\"version\": 2\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a product template with wrong model version",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"form\": {\r\n    \t\"key\": \"dev\",\t\r\n    \t\"version\": 1234\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade a product template without define form",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productTemplates/{{productTemplateId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productTemplates",
								"{{productTemplateId}}",
								"upgrade"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Type",
			"item": [
				{
					"name": "Create project type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"projectTypeId\", pm.response.json().key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"key\": \"new key\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"http://example.com/icon4.ico\",\r\n    \t\"question\": \"question 4\",\r\n    \t\"info\": \"info 4\",\r\n    \t\"aliases\": [\"key-41\", \"key_42\"],\r\n    \t\"metadata\": {}\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get project type",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes/{{projectTypeId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes",
								"{{projectTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project type",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"displayName\": \"Chatbot-updated\"\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes/{{projectTypeId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes",
								"{{projectTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project type",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/projectTypes/{{projectTypeId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"projectTypes",
								"{{projectTypeId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Org Config",
			"item": [
				{
					"name": "Create org config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    console.log(pm.response.json())",
									"    pm.environment.set(\"orgStrId\", pm.response.json().orgId);",
									"    pm.environment.set(\"orgConfigName\", pm.response.json().configName);",
									"    pm.environment.set(\"orgId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{      \n\t\"orgId\": \"testStr Id\",\n    \"configName\": \"project_catefory_url\",\n    \"configValue\": \"http://localhost/url\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/orgConfig",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"orgConfig"
							]
						}
					},
					"response": []
				},
				{
					"name": "List org configs without orgId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/orgConfig",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"orgConfig"
							]
						}
					},
					"response": []
				},
				{
					"name": "List org configs with only orgId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/orgConfig?orgId={{orgStrId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"orgConfig"
							],
							"query": [
								{
									"key": "orgId",
									"value": "{{orgStrId}}",
									"description": "orgId can be array with ',', 'id1,id2'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List org configs with orgId and configName",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/orgConfig?orgId={{orgStrId}}&configName={{orgConfigName}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"orgConfig"
							],
							"query": [
								{
									"key": "orgId",
									"value": "{{orgStrId}}",
									"description": "orgId can be array with ',', 'id1,id2'"
								},
								{
									"key": "configName",
									"value": "{{orgConfigName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete org config",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/orgConfig/{{orgId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"orgConfig",
								"{{orgId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update org config",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{      \n\t\"orgId\": \"another orgId\",\n    \"configName\": \"project_catefory_url\",\n    \"configValue\": \"http://localhost/url\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/orgConfig/{{orgId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"orgConfig",
								"{{orgId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Product Category",
			"item": [
				{
					"name": "Create product category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"productCategoryId\", pm.response.json().key);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"key\": \"generic\",\r\n        \"displayName\": \"new displayName\",\r\n        \"icon\": \"icon\",\r\n        \"question\": \"question\",\r\n        \"info\": \"info\",\r\n        \"aliases\": [\"key-1\", \"key-2\"]\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "List product categories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get product category",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories/{{productCategoryId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories",
								"{{productCategoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update product category",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"displayName\": \"Chatbot-updated\"\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories/{{productCategoryId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories",
								"{{productCategoryId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete product category",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"key\":\"new key\",\r\n    \"category\":\"new category\",\r\n    \"scope\":{\r\n      \"scope1\":\"scope 1\",\r\n      \"scope2\": [\"a\"]\r\n    },\r\n    \"phases\":{\r\n      \"phase1\":\"phase 1\",\r\n      \"phase2\": {\r\n    \t\"another\": \"another\"\r\n      }\r\n    }\r\n  }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/productCategories/{{productCategoryId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"productCategories",
								"{{productCategoryId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJhZG1pbmlzdHJhdG9yIl0sImlzcyI6Imh0dHBzOi8vYXBpLnRvcGNvZGVyLWRldi5jb20iLCJoYW5kbGUiOiJwc2hhaDEiLCJleHAiOjI0NjI0OTQ2MTgsInVzZXJJZCI6IjQwMTM1OTc4IiwiaWF0IjoxNDYyNDk0MDE4LCJlbWFpbCI6InBzaGFoMUB0ZXN0LmNvbSIsImp0aSI6ImY0ZTFhNTE0LTg5ODAtNDY0MC04ZWM1LWUzNmUzMWE3ZTg0OSJ9.XuNN7tpMOXvBG1QwWRQROj7NfuUbqhkjwn39Vy4tR5I",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Project upgrade",
			"item": [
				{
					"name": "Migrate project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate project (completed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate project with phase name",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3,\n\t\t\"phaseName\": \"Custom phase name\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate project with phase name (completed)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\t\"targetVersion\": \"v3\",\n\t\t\"defaultProductTemplateId\": 3,\n\t\t\"phaseName\": \"Custom phase name\"\n\t}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/upgrade",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"upgrade"
							]
						}
					},
					"response": []
				}
			],
			"description": "Request to migrate projects."
		},
		{
			"name": "Timeline",
			"item": [
				{
					"name": "Create timeline",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"timelineId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-connectAdmin-40051336}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\":\"new name\",\r\n\t\"description\":\"new description\",\r\n\t\"startDate\":\"2018-05-29T00:00:00.000Z\",\r\n\t\"endDate\": \"2018-05-30T00:00:00.000Z\",\r\n\t\"reference\": \"project\",\r\n\t\"referenceId\": {{projectId}}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create timeline with templateId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"timelineId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-connectAdmin-40051336}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name\",\r\n    \"description\":\"new description\",\r\n    \"startDate\":\"2018-05-29T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-30T00:00:00.000Z\",\r\n    \"reference\": \"project\",\r\n    \"referenceId\": 1,\r\n    \"templateId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create timeline with invalid data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-connectAdmin-40051336}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startDate\":\"2018-05-29T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-28T00:00:00.000Z\",\r\n    \"reference\": \"invalid\",\r\n    \"referenceId\": 0\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							]
						}
					},
					"response": []
				},
				{
					"name": "List timelines (filter by reference and referenceId)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}",
								"disabled": true
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines?reference=project&referenceId={{projectId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines"
							],
							"query": [
								{
									"key": "reference",
									"value": "project"
								},
								{
									"key": "referenceId",
									"value": "{{projectId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get timeline",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get timeline from DB",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update timeline",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"timeline 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"startDate\": \"2018-05-01T00:00:00.000Z\",\r\n    \"endDate\": null,\r\n    \"reference\": \"project\",\r\n    \"referenceId\": {{projectId}}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update timeline (startDate)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"timeline 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"startDate\": \"2018-05-05T00:00:00.000Z\",\r\n    \"reference\": \"project\",\r\n    \"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update timeline (endDate)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"timeline 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"startDate\": \"2018-05-04T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-05T00:00:00.000Z\",\r\n    \"reference\": \"project\",\r\n    \"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete timeline",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Milestone",
			"item": [
				{
					"name": "Create milestone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"milestoneId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 3\",\r\n    \"description\": \"description 3\",\r\n    \"duration\": 4,\r\n    \"startDate\": \"2018-05-29T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-30T00:00:00.000Z\",\r\n    \"completionDate\": \"2018-05-31T00:00:00.000Z\",\r\n    \"status\": \"draft\",\r\n    \"type\": \"type3\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            2,\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 3\",\r\n    \"activeText\": \"activeText 3\",\r\n    \"completedText\": \"completedText 3\",\r\n    \"blockedText\": \"blockedText 3\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create milestone with invalid data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member-40051331}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startDate\": \"2018-05-05T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-04T00:00:00.000Z\",\r\n    \"completionDate\": \"2018-05-04T00:00:00.000Z\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestones",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestones (sort)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones?sort=order desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							],
							"query": [
								{
									"key": "sort",
									"value": "order desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get milestone",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk update milestone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"milestoneId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\r\n    \"name\": \"milestone new\",\r\n    \"description\": \"description new\",\r\n    \"duration\": 4,\r\n    \"startDate\": \"2018-05-29T00:00:00.000Z\",\r\n    \"endDate\": \"2018-05-30T00:00:00.000Z\",\r\n    \"completionDate\": \"2018-05-31T00:00:00.000Z\",\r\n    \"status\": \"draft\",\r\n    \"type\": \"type3\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            2,\r\n            3,\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 3\",\r\n    \"activeText\": \"activeText 3\",\r\n    \"completedText\": \"completedText 3\",\r\n    \"blockedText\": \"blockedText 3\"\r\n},\r\n{\r\n\t\"id\": 2,\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"startDate\": \"2018-09-25T00:00:00.000Z\",\r\n    \"completionDate\": \"2018-09-28T00:00:00.000Z\",\r\n    \"status\": \"draft\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}\r\n]"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-09-28T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone - paused",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"status\": \"paused\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"statusComment\": \"milestone paused\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone - resume",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"status\": \"resume\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"statusComment\": \"milestone resume\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (active)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 2-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-10-28T00:00:00.000Z\",\r\n    \"status\": \"active\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (completed)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 2-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-10-28T00:00:00.000Z\",\r\n    \"status\": \"completed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 2)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 2,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 2 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 3)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 3,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 3 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestone 1-updated\",\r\n    \"description\": \"description-updated\",\r\n    \"duration\": 3,\r\n    \"completionDate\": \"2018-05-07T00:00:00.000Z\",\r\n    \"status\": \"closed\",\r\n    \"type\": \"type2\",\r\n    \"details\": {\r\n        \"detail1\": {\r\n            \"subDetail1C\": 3\r\n        },\r\n        \"detail2\": [\r\n            4\r\n        ]\r\n    },\r\n    \"order\": 1,\r\n    \"plannedText\": \"plannedText 1-updated\",\r\n    \"activeText\": \"activeText 1-updated\",\r\n    \"completedText\": \"completedText 1-updated\",\r\n    \"blockedText\": \"blockedText 1-updated\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete milestone",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/timelines/{{timelineId}}/milestones/{{milestoneId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"{{timelineId}}",
								"milestones",
								"{{milestoneId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Milestone Template",
			"item": [
				{
					"name": "Create milestone template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"milestoneTemplateId\", pm.response.json().id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestoneTemplate 1\",\r\n    \"description\": \"description 1\",\r\n    \"duration\": 11,\r\n    \"type\": \"type3\",\r\n    \"order\": 1,\r\n    \"activeText\": \"activeText 1\",\r\n    \"completedText\": \"completedText 1\",\r\n    \"blockedText\": \"blockedText 1\",\r\n    \"plannedText\": \"planned Text 1\",\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": {{productTemplateId}},\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create milestone template with invalid referenceId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"milestoneTemplate 3\",\r\n    \"description\": \"description 3\",\r\n    \"duration\": 33,\r\n    \"type\": \"type3\",\r\n    \"order\": 1,\r\n    \"activeText\": \"activeText 1\",\r\n    \"completedText\": \"completedText 1\",\r\n    \"blockedText\": \"blockedText 1\",\r\n    \"plannedText\": \"planned Text 1\",\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1000,\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create milestone template with invalid data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone milestone template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"sourceReference\": \"productTemplate\",\r\n    \"sourceReferenceId\": 1,\r\n    \"reference\": \"productTemplate\",\r\n    \"referenceId\": 2\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/clone",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"clone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone milestone template with invalid referenceId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sourceReference\": \"productTemplate\",\r\n    \"sourceReferenceId\": 1,\r\n    \"reference\": \"productTemplate\",\r\n    \"referenceId\": 2000\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/clone",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"clone"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clone milestone template with invalid sourceReferenceId",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"sourceReference\": \"productTemplate\",\r\n    \"sourceReferenceId\": 1000,\r\n    \"reference\": \"productTemplate\",\r\n    \"referenceId\": 2\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/clone",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"clone"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestone templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestone templates (filter)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates?reference=productTemplate&referenceId={{productTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							],
							"query": [
								{
									"key": "reference",
									"value": "productTemplate"
								},
								{
									"key": "referenceId",
									"value": "{{productTemplateId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List milestone templates (sort)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates?reference=productTemplate&referenceId={{productTemplateId}}&sort=order desc",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates"
							],
							"query": [
								{
									"key": "reference",
									"value": "productTemplate"
								},
								{
									"key": "referenceId",
									"value": "{{productTemplateId}}"
								},
								{
									"key": "sort",
									"value": "order desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get milestone template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"milestoneTemplate 1-updated\",\r\n\t\"description\": \"description 1-updated\",\r\n\t\"duration\": 34,\r\n\t\"type\": \"type1-updated\",\r\n\t\"order\": 1,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 2)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"milestoneTemplate 1-updated\",\r\n  \"description\": \"description 1-updated\",\r\n  \"duration\": 34,\r\n  \"type\": \"type1-updated\",\r\n  \"order\": 2,\r\n  \"reference\": \"productTemplate\",\r\n  \"referenceId\": {{productTemplateId}}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 2 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"milestoneTemplate 1-updated\",\r\n\t\"description\": \"description 1-updated\",\r\n\t\"duration\": 34,\r\n\t\"type\": \"type1-updated\",\r\n\t\"order\": 1,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 1 => 3)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"milestoneTemplate 1-updated\",\r\n  \"description\": \"description 1-updated\",\r\n  \"duration\": 34,\r\n  \"type\": \"type1-updated\",\r\n  \"order\": 3,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone (order 3 => 1)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"milestoneTemplate 1-updated\",\r\n  \"description\": \"description 1-updated\",\r\n  \"duration\": 34,\r\n  \"type\": \"type1-updated\",\r\n  \"order\": 1,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update milestone with metadata",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"name\": \"milestoneTemplate 5-updated\",\r\n\t\"description\": \"description 5-updated\",\r\n\t\"duration\": 34,\r\n\t\"type\": \"type5-updated\",\r\n\t\"order\": 5,\r\n\t\"reference\": \"productTemplate\",\r\n\t\"referenceId\": 1,\r\n\t\"metadata\": {\r\n        \"metadata1\": {\r\n          \"name\": \"metadata 1 - update\",\r\n          \"details\": {\r\n            \"anyDetails\": \"any details 1 - update\",\r\n            \"newDetails\": \"new\"\r\n          },\r\n          \"others\": [\"others new\"]\r\n        },\r\n        \"metadata3\": {\r\n          \"name\": \"metadata 3\",\r\n          \"details\": {\r\n            \"anyDetails\": \"any details 3\"\r\n          },\r\n          \"others\": [\"others 31\", \"others 32\"]\r\n        }\r\n      }\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete milestone",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/timelines/metadata/milestoneTemplates/{{milestoneTemplateId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"timelines",
								"metadata",
								"milestoneTemplates",
								"{{milestoneTemplateId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metadata",
			"item": [
				{
					"name": "Get all metadata",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/metadata",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all metadata with includeAllVersion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata?includeAllReferred=true",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata"
							],
							"query": [
								{
									"key": "includeAllReferred",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Form Version",
			"item": [
				{
					"name": "List forms",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get latest version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create form",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"formKey\", pm.response.json().key);",
									"    pm.environment.set(\"formVersion\", pm.response.json().version);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update form",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test111\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete form",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Form Revision",
			"item": [
				{
					"name": "List all revision for version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions/{{formRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions",
								"{{formRevision}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create form",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"formRevision\", pm.response.json().revision);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create for no exist key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/no-exist-2222key36/versions/1/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"no-exist-2222key36",
								"versions",
								"1",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/form/{{formKey}}/versions/{{formVersion}}/revisions/{{formRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"form",
								"{{formKey}}",
								"versions",
								"{{formVersion}}",
								"revisions",
								"{{formRevision}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Price Config Version",
			"item": [
				{
					"name": "List price configs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get latest version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create priceConfig",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"priceKey\", pm.response.json().key);",
									"    pm.environment.set(\"priceVersion\", pm.response.json().version);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update priceConfig",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test111\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete priceConfig",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Price Config Revision",
			"item": [
				{
					"name": "List all revision for version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/dev/versions/3/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"dev",
								"versions",
								"3",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}/revisions/{{priceRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}",
								"revisions",
								"{{priceRevision}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create price config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"priceRevision\", pm.response.json().revision);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create for no exist key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/no-exist-key/versions/1/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"no-exist-key",
								"versions",
								"1",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/priceConfig/{{priceKey}}/versions/{{priceVersion}}/revisions/{{priceRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"priceConfig",
								"{{priceKey}}",
								"versions",
								"{{priceVersion}}",
								"revisions",
								"{{priceRevision}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plan Config Version",
			"item": [
				{
					"name": "List plan configs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get latest version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create plan config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"planKey\", pm.response.json().key);",
									"    pm.environment.set(\"planVersion\", pm.response.json().version);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/dev/versions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"dev",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update plan config",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test111\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete plan config",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Plan Config Revision",
			"item": [
				{
					"name": "List all revision for version",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a particular revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions/{{planRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions",
								"{{planRevision}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create plan config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"planRevision\", pm.response.json().revision);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create for no exist key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \t\"config\": {\r\n    \t\t\"hello\": \"test\"\r\n    \t}\r\n   }"
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/no-exist-key/versions/1/revisions",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"no-exist-key",
								"versions",
								"1",
								"revisions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete revision",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJUb3Bjb2RlciBVc2VyIiwiYWRtaW5pc3RyYXRvciJdLCJpc3MiOiJodHRwczovL2FwaS50b3Bjb2Rlci1kZXYuY29tIiwiaGFuZGxlIjoidGVzdDEiLCJleHAiOjI1NjMwNzY2ODksInVzZXJJZCI6IjQwMDUxMzMzIiwiaWF0IjoxNDYzMDc2MDg5LCJlbWFpbCI6InRlc3RAdG9wY29kZXIuY29tIiwianRpIjoiYjMzYjc3Y2QtYjUyZS00MGZlLTgzN2UtYmViOGUwYWU2YTRhIn0.wKWUe0-SaiFVN-VR_-GwgFlvWaDkSbc8H55ktb9LAVw",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/metadata/planConfig/{{planKey}}/versions/{{planVersion}}/revisions/{{planRevision}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"metadata",
								"planConfig",
								"{{planKey}}",
								"versions",
								"{{planVersion}}",
								"revisions",
								"{{planRevision}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Reports",
			"item": [
				{
					"name": "summary",
					"item": [
						{
							"name": "get report by admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token-admin-40051333}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/reports?reportName=summary",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"reports"
									],
									"query": [
										{
											"key": "reportName",
											"value": "summary"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get report by member",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token-member2-40051335}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/reports?reportName=summary",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"reports"
									],
									"query": [
										{
											"key": "reportName",
											"value": "summary"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get report with invalid project id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects/123456/reports?reportName=summary",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"123456",
										"reports"
									],
									"query": [
										{
											"key": "reportName",
											"value": "summary"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get report with invalid report name",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/reports?reportName=summary123",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"reports"
									],
									"query": [
										{
											"key": "reportName",
											"value": "summary123"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "projectBudget",
					"item": [
						{
							"name": "get report by admin",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/projects/{{projectId}}/reports?reportName=projectBudget",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"projects",
										"{{projectId}}",
										"reports"
									],
									"query": [
										{
											"key": "reportName",
											"value": "projectBudget"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Project Setting",
			"item": [
				{
					"name": "Create project setting - double",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"    pm.environment.set(\"settingId\", pm.response.json().id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_topcoder_service\",\r\n    \"value\": \"1000\",\r\n    \"valueType\": \"double\",\r\n    \"projectId\": 1,\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting - percentage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_fee\",\r\n    \"value\": \"18.88\",\r\n    \"valueType\": \"percentage\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t    \"topcoderRoles\": [\"Connect Copilot\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting - for project = 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_topcoder_service\",\r\n    \"value\": \"2222\",\r\n    \"valueType\": \"double\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/2/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"2",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting - another estimation type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_reference_program\",\r\n    \"value\": \"17800\",\r\n    \"valueType\": \"double\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\", \"copilot\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting with non estimation type",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_non_estimation\",\r\n    \"value\": \"8765\",\r\n    \"valueType\": \"string\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t  \"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting - duplicate key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_topcoder_service\",\r\n    \"value\": \"1000\",\r\n    \"valueType\": \"double\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting with invalid valueType",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_topcoder_service\",\r\n    \"value\": \"1000\",\r\n    \"valueType\": \"int1\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting with invalid percentage value",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_community\",\r\n    \"value\": \"200\",\r\n    \"valueType\": \"percentage\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting with missing readPermission",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_topcoder_service\",\r\n    \"value\": \"1000\",\r\n    \"valueType\": \"int\",\r\n    \"projectId\": 1,\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting with empty body",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create project setting - not permitted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-member-40051331}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_topcoder_service\",\r\n    \"value\": \"1000\",\r\n    \"valueType\": \"double\",\r\n\t\"writePermission\": {\r\n\t  \t\"allowRule\": {\r\n\t    \t\"projectRoles\": [\"account_manager\"],\r\n\t    \t\"topcoderRoles\": [\"administrator\", \"Connect Admin\"]\r\n\t    },\r\n\t  \t\"denyRule\": {\r\n\t    \t\"topcoderRoles\": [\"Connect Copilot Manager\"]\r\n\t    }\r\n\t  },\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"administrator\", \"Connect Admin\", \"Connect Account Manager\"]\r\n\t  },\r\n\t\"metadata\": {}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project setting",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project setting - 403",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-copilot-40051332}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "List project setting - manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-manager-40051334}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project setting - (failed) change key",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"key\": \"markup_community\",\r\n\t\"readPermission\": {\r\n\t  \t\"projectRoles\": [\"manager\"],\r\n\t    \"topcoderRoles\": [\"Connect Manager\"]\r\n\t  }\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings/{{settingId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings",
								"{{settingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project setting - change double to percentage",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"35.60\",\r\n    \"valueType\": \"percentage\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings/{{settingId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings",
								"{{settingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project setting - non-existent project",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"30\",\r\n    \"valueType\": \"percentage\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/9999/settings/{{settingId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"9999",
								"settings",
								"{{settingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project setting - non-existent project setting",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"value\": \"30\",\r\n    \"valueType\": \"percentage\"\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings/9999",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings",
								"9999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project setting - change readPermission",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"readPermission\": {\r\n\t\t\"projectRoles\": [\"manager\"],\r\n\t\t\"topcoderRoles\": [\"Connect Manager\"]\r\n\t}\r\n}"
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings/{{settingId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings",
								"{{settingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project setting",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{api-url}}/projects/{{projectId}}/settings/{{settingId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"projects",
								"{{projectId}}",
								"settings",
								"{{settingId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer Payment",
			"item": [
				{
					"name": "Capture and refund",
					"item": [
						{
							"name": "charge customer payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"captureAndRefundId\", pm.response.json().id);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/customer-payments/:id/charge",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"customer-payments",
										":id",
										"charge"
									],
									"variable": [
										{
											"key": "id",
											"value": "8"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "refund customer payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/customer-payments/{{captureAndRefundId}}/refund",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"customer-payments",
										"{{captureAndRefundId}}",
										"refund"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Confirm and capture",
					"item": [
						{
							"name": "confirm customer payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.environment.set(\"confirmAndCaptureId\", pm.response.json().id);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/customer-payments/:id/confirm",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"customer-payments",
										":id",
										"confirm"
									],
									"variable": [
										{
											"key": "id",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "charge customer payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/customer-payments/{{confirmAndCaptureId}}/charge",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"customer-payments",
										"{{confirmAndCaptureId}}",
										"charge"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Cancel",
					"item": [
						{
							"name": "cancel customer payment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{jwt-token-admin-40051333}}"
									}
								],
								"url": {
									"raw": "{{api-url}}/customer-payments/:id/cancel",
									"host": [
										"{{api-url}}"
									],
									"path": [
										"customer-payments",
										":id",
										"cancel"
									],
									"variable": [
										{
											"key": "id",
											"value": "9"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List customer payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.environment.set(\"customerPaymentId\", pm.response.json()[0].id);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/customer-payments",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"customer-payments"
							],
							"query": [
								{
									"key": "reference",
									"value": "project",
									"disabled": true
								},
								{
									"key": "referenceId",
									"value": "1234567",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "amount desc",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get customer payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"url": {
							"raw": "{{api-url}}/customer-payments/{{customerPaymentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"customer-payments",
								"{{customerPaymentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update customer payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{jwt-token-admin-40051333}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reference\": \"project\",\n    \"referenceId\": \"123\"\n}"
						},
						"url": {
							"raw": "{{api-url}}/customer-payments/{{customerPaymentId}}",
							"host": [
								"{{api-url}}"
							],
							"path": [
								"customer-payments",
								"{{customerPaymentId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}