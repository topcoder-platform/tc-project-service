swagger: "2.0"
info:
  version: "v4"
  title: "Projects API"
# during production,should point to your server machine
host: localhost:3000
basePath: "/v4"
# during production, should use https
schemes:
- "http"
produces:
- application/json
consumes:
- application/json

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
  /projects:
    get:
      tags:
        - project
      operationId: findProjects
      security:
        - Bearer: []
      description: Retrieve projects that match the filter
      responses:
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of projects
          schema:
            $ref: "#/definitions/ProjectListResponse"
      parameters:
        - $ref: "#/parameters/offsetParam"
        - $ref: "#/parameters/limitParam"
        - name: filter
          required: true
          type: string
          in: query
          description: |
            Url encoded list of Supported filters
             - id
             - status
             - type
             - memberOnly
             - keyword
        - name: sort
          required: false
          description: |
            sort projects by status, name, type, createdAt, updatedAt. Default is createdAt asc
          in: query
          type: string
    post:
      operationId: addProject
      security:
        - Bearer: []
      description: Create a project
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewProjectBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created project
          schema:
            $ref: "#/definitions/ProjectResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /projects/{projectId}:
    get:
      description: Retrieve project by id
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a project
          schema:
            $ref: "#/definitions/ProjectResponse"
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - name: fields
          required: false
          type: string
          in: query
          description: |
            Comma separated list of project fields to return.
            Can also specify project_members, attachments to get project members and project attachments.
            Sub fields of project members and project attachments are also allowed.
      operationId: getProject

    patch:
      operationId: updateProject
      security:
        - Bearer: []
      description: Update a project that user has access to. Managers and admin are able to pull out a project from cancelled state.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated project. Returns original and updated project object
          schema:
            $ref: "#/definitions/UpdateProjectResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - name: body
          in: body
          required: true
          description: Only specify those properties that needs to be updated. `cancelReason` is mandatory if status is cancelled
          schema:
            $ref: "#/definitions/ProjectBodyParam"

    delete:
      description: remove an existing project
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/projectIdParam"
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: If project is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Project successfully removed

  /projects/{projectId}/attachments:
    post:
      description: add a new project attachment
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewProjectAttachmentBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created project attachment
          schema:
            $ref: "#/definitions/NewProjectAttachmentResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /projects/{projectId}/attachments/{id}:
    patch:
      description: Update an existing attachment
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - in: path
          name: id
          required: true
          description: The id of attachment to update
          type: integer
        - in: body
          name: body
          required: true
          description: Specify only those properties that needs to be updated
          schema:
            $ref: '#/definitions/NewProjectAttachmentBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created project
          schema:
            $ref: "#/definitions/NewProjectAttachmentResponse"
        '404':
          description: If project attachment is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
    delete:
      description: remove an existing attachment
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - in: path
          name: id
          required: true
          description: The id of attachment to delete
          type: integer
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: If attachment is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Attachment successfully removed

  /projects/{projectId}/members:
    post:
      description: add a new project member
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewProjectMemberBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created project
          schema:
            $ref: "#/definitions/NewProjectMemberResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /projects/{projectId}/members/{id}:
    delete:
      description: Delete a project member
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - in: path
          name: id
          required: true
          type: integer

      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Member successfully removed
    patch:
        security:
          - Bearer: []
        description: Support editing project member roles & primary option.
        responses:
          '403':
            description: No permission or wrong token
            schema:
              $ref: "#/definitions/ErrorModel"
          '404':
            description: Not found
            schema:
              $ref: "#/definitions/ErrorModel"
          '200':
            description: Successfully updated project member. Returns entire project member object
            schema:
              $ref: "#/definitions/UpdateProjectMemberResponse"
          '422':
            description: Invalid input
            schema:
              $ref: "#/definitions/ErrorModel"
          default:
            description: error payload
            schema:
              $ref: '#/definitions/ErrorModel'
        parameters:
          - $ref: "#/parameters/projectIdParam"
          - in: path
            name: id
            required: true
            type: integer
          - name: body
            in: body
            required: true
            schema:
              $ref: "#/definitions/UpdateProjectMemberBodyParam"

  /projects/{projectId}/phases:
    parameters:
      - $ref: "#/parameters/projectIdParam"
    get:
      tags:
        - phase
      operationId: findProjectPhases
      security:
        - Bearer: []
      description: Retrieve all project phases. All users who can edit project can access this endpoint.
      parameters:
        - name: fields
          required: false
          type: string
          in: query
          description: |
            Comma separated list of project phase fields to return.
        - name: sort
          required: false
          description: |
            sort project phases by startDate, endDate, status. Default is startDate asc
          in: query
          type: string
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of project phases
          schema:
            $ref: "#/definitions/ProjectPhaseListResponse"
    post:
      tags:
        - phase
      operationId: addProjectPhase
      security:
        - Bearer: []
      description: Create a project phase
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProjectPhaseBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created project phase
          schema:
            $ref: "#/definitions/ProjectPhaseResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
  
  /projects/{projectId}/phases/{phaseId}:
    parameters:
      - $ref: "#/parameters/projectIdParam"
      - $ref: "#/parameters/phaseIdParam"
    get:
      tags:
        - phase
      description: Retrieve project phase by id. All users who can edit project can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a project phase
          schema:
            $ref: "#/definitions/ProjectPhaseResponse"
      parameters:
        - $ref: "#/parameters/phaseIdParam"
      operationId: getProjectPhase

    patch:
      tags:
        - phase
      operationId: updateProjectPhase
      security:
        - Bearer: []
      description: Update a project phase. All users who can edit project can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated project phase.
          schema:
            $ref: "#/definitions/ProjectPhaseResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - $ref: "#/parameters/phaseIdParam"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProjectPhaseBodyParam"

    delete:
      tags:
        - phase
      description: Remove an existing project phase. All users who can edit project can access this endpoint.
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/phaseIdParam"
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: If project is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Project phase successfully removed



  /projects/{projectId}/phases/{phaseId}/products:
    parameters:
      - $ref: "#/parameters/projectIdParam"
      - $ref: "#/parameters/phaseIdParam"
    get:
      tags:
        - phase product
      operationId: findPhaseProducts
      security:
        - Bearer: []
      description: Retrieve all phase products. All users who can edit project can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of phase products
          schema:
            $ref: "#/definitions/PhaseProductListResponse"
    post:
      tags:
        - phase product
      operationId: addPhaseProduct
      security:
        - Bearer: []
      description: Create a phase product
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PhaseProductBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created phase product
          schema:
            $ref: "#/definitions/PhaseProductResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /projects/{projectId}/phases/{phaseId}/products/{productId}:
    parameters:
      - $ref: "#/parameters/projectIdParam"
      - $ref: "#/parameters/phaseIdParam"
      - $ref: "#/parameters/productIdParam"
    get:
      tags:
        - phase product
      description: Retrieve phase product by id. All users who can edit project can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a phase product
          schema:
            $ref: "#/definitions/PhaseProductResponse"
      parameters:
        - $ref: "#/parameters/phaseIdParam"
      operationId: getPhaseProduct

    patch:
      tags:
        - phase product
      operationId: updatePhaseProduct
      security:
        - Bearer: []
      description: Update a phase product. All users who can edit project can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated phase product.
          schema:
            $ref: "#/definitions/PhaseProductResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - $ref: "#/parameters/phaseIdParam"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/PhaseProductBodyParam"

    delete:
      tags:
        - phase product
      description: Remove an existing phase product. All users who can edit project can access this endpoint.
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/phaseIdParam"
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: If project is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Project phase successfully removed

  /projects/{projectId}/upgrade:
    post:
      tags:
        - project
      operationId: upgradeProject
      security:
        - Bearer: []
      description: Migrates a project to a target version. Only users with "administrator" or "Connect admin" roles can access to this endpoint
      parameters:
        - $ref: "#/parameters/projectIdParam"
        - name: body
          in: body
          required: true
          description: Project upgrade body
          schema:
            $ref: "#/definitions/ProjectUpgradeBodyParam"
      responses:
        '400':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Project not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '500':
          description: Invalid server state or unknown error
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Project migrated successfully
          schema:
            $ref: "#/definitions/ProjectUpgradeResponse"

  /projectTemplates:
    get:
      tags:
        - projectTemplate
      operationId: findProjectTemplates
      security:
        - Bearer: []
      description: Retrieve all project templates. All user roles can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of project templates
          schema:
            $ref: "#/definitions/ProjectTemplateListResponse"
    post:
      tags:
        - projectTemplate
      operationId: addProjectTemplate
      security:
        - Bearer: []
      description: Create a project template
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProjectTemplateBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created project template
          schema:
            $ref: "#/definitions/ProjectTemplateResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /projectTemplates/{templateId}:
    get:
      tags:
        - projectTemplate
      description: Retrieve project template by id. All user roles can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a project template
          schema:
            $ref: "#/definitions/ProjectTemplateResponse"
      parameters:
        - $ref: "#/parameters/templateIdParam"
      operationId: getProjectTemplate

    patch:
      tags:
        - projectTemplate
      operationId: updateProjectTemplate
      security:
        - Bearer: []
      description: Update a project template. Only connect manager, connect admin, and admin can access this endpoint.
        For attributes with JSON object type, it would overwrite the existing fields, or add new if the fields don't exist in the JSON object.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated project template.
          schema:
            $ref: "#/definitions/ProjectTemplateResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - $ref: "#/parameters/templateIdParam"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProjectTemplateBodyParam"

    delete:
      tags:
        - projectTemplate
      description: Remove an existing project template. Only connect manager, connect admin, and admin can access this endpoint.
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/templateIdParam"
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: If project is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Project template successfully removed


  /productTemplates:
    get:
      tags:
        - productTemplate
      operationId: findProductTemplates
      security:
        - Bearer: []
      description: Retrieve all product templates. All user roles can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of product templates
          schema:
            $ref: "#/definitions/ProductTemplateListResponse"
    post:
      tags:
        - productTemplate
      operationId: addProductTemplate
      security:
        - Bearer: []
      description: Create a product template
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductTemplateBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created product template
          schema:
            $ref: "#/definitions/ProductTemplateResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /productTemplates/{templateId}:
    get:
      tags:
        - productTemplate
      description: Retrieve product template by id. All user roles can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a product template
          schema:
            $ref: "#/definitions/ProductTemplateResponse"
      parameters:
        - $ref: "#/parameters/templateIdParam"
      operationId: getProductTemplate

    patch:
      tags:
        - productTemplate
      operationId: updateProductTemplate
      security:
        - Bearer: []
      description: Update a product template. Only connect manager, connect admin, and admin can access this endpoint.
        For attributes with JSON object type, it would overwrite the existing fields, or add new if the fields don't exist in the JSON object.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated product template.
          schema:
            $ref: "#/definitions/ProductTemplateResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - $ref: "#/parameters/templateIdParam"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductTemplateBodyParam"

    delete:
      tags:
        - productTemplate
      description: Remove an existing product template. Only connect manager, connect admin, and admin can access this endpoint.
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/templateIdParam"
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: If product is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Product template successfully removed


  /projectTypes:
    get:
      tags:
        - projectType
      operationId: findProjectTypes
      security:
        - Bearer: []
      description: Retrieve all project types. All user roles can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of project types
          schema:
            $ref: "#/definitions/ProjectTypeListResponse"
    post:
      tags:
        - projectType
      operationId: addProjectType
      security:
        - Bearer: []
      description: Create a project type. Only admin or connect admin can access this endpoint.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProjectTypeCreateBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created project type
          schema:
            $ref: "#/definitions/ProjectTypeResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /projectTypes/{key}:
    get:
      tags:
        - projectType
      description: Retrieve project type by id. All user roles can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a project type
          schema:
            $ref: "#/definitions/ProjectTypeResponse"
      parameters:
        - $ref: "#/parameters/keyParam"
      operationId: getProjectType

    patch:
      tags:
        - projectType
      operationId: updateProjectType
      security:
        - Bearer: []
      description: Update a project type. Only admin or connect admin can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated project type.
          schema:
            $ref: "#/definitions/ProjectTypeResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - $ref: "#/parameters/keyParam"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProjectTypeBodyParam"

    delete:
      tags:
        - projectType
      description: Remove an existing project type. Only admin or connect admin can access this endpoint.
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/keyParam"
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: If project is not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Project type successfully removed


  /timelines:
    get:
      tags:
        - timeline
      operationId: findTimelines
      security:
        - Bearer: []
      description: Retrieve timelines which its projects are accessible by the user.
      parameters:
        - name: filter
          required: false
          type: string
          in: query
          description: |
            Url encoded list of supported filters
             - reference
             - referenceId
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of timelines
          schema:
            $ref: "#/definitions/TimelineListResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
    post:
      tags:
        - timeline
      operationId: addTimeline
      security:
        - Bearer: []
      description: Create a timeline. All users who can edit the project can access this endpoint.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TimelineBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created timeline
          schema:
            $ref: "#/definitions/TimelineResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /timelines/{timelineId}:
    get:
      tags:
        - timeline
      description: Retrieve timeline by id. All users who can view the project can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a timeline
          schema:
            $ref: "#/definitions/TimelineResponse"
      parameters:
        - $ref: "#/parameters/timelineIdParam"
      operationId: getTimeline

    patch:
      tags:
        - timeline
      operationId: updateTimeline
      security:
        - Bearer: []
      description: Update a timeline. All users who can edit the project can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated timeline.
          schema:
            $ref: "#/definitions/TimelineResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - $ref: "#/parameters/timelineIdParam"
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/TimelineBodyParam"

    delete:
      tags:
        - timeline
      description: Remove an existing timeline. All users who can edit the project can access this endpoint.
      security:
        - Bearer: []
      parameters:
        - $ref: "#/parameters/timelineIdParam"
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Timeline successfully removed

  /timelines/{timelineId}/milestones:
    parameters:
      - $ref: "#/parameters/timelineIdParam"
    get:
      tags:
        - milestone
      operationId: findMilestones
      security:
        - Bearer: []
      description: Retrieve all milestones. All users who can view the timeline can access this endpoint.
      parameters:
        - name: sort
          required: false
          description: sort by `order`. Default is `order asc`
          in: query
          type: string
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of milestones
          schema:
            $ref: "#/definitions/MilestoneListResponse"
    post:
      tags:
        - milestone
      operationId: addMilestone
      security:
        - Bearer: []
      description: Create a milestone. All users who can edit the timeline can access this endpoint.
        It also updates the `order` field of all other milestones in the same timeline which have `order` greater than or equal to the `order` specified in the POST body.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MilestoneBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created milestone
          schema:
            $ref: "#/definitions/MilestoneResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /timelines/{timelineId}/milestones/{milestoneId}:
    parameters:
      - $ref: "#/parameters/timelineIdParam"
      - $ref: "#/parameters/milestoneIdParam"
    get:
      tags:
        - milestone
      description: Retrieve milestone by id. All users who can view the timeline can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a milestone
          schema:
            $ref: "#/definitions/MilestoneResponse"
      operationId: getMilestone

    patch:
      tags:
        - milestone
      operationId: updateMilestone
      security:
        - Bearer: []
      description: Update a milestone. All users who can edit the timeline can access this endpoint.
        For attributes with JSON object type, it would overwrite the existing fields, or add new if the fields don't exist in the JSON object.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated milestone.
          schema:
            $ref: "#/definitions/MilestoneResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/MilestoneBodyParam"

    delete:
      tags:
        - milestone
      description: Remove an existing milestone. All users who can edit the timeline can access this endpoint.
      security:
        - Bearer: []
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Milestone successfully removed


  /productTemplates/{productTemplateId}/milestones:
    parameters:
      - $ref: "#/parameters/productTemplateIdParam"
    get:
      tags:
        - productMilestoneTemplate
      operationId: findMilestoneTemplates
      security:
        - Bearer: []
      description: Retrieve all milestone templates. All user roles can access this endpoint.
      parameters:
        - name: sort
          required: false
          description: sort by `order`. Default is `order asc`
          in: query
          type: string
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: A list of milestone templates
          schema:
            $ref: "#/definitions/MilestoneTemplateListResponse"
    post:
      tags:
        - productMilestoneTemplate
      operationId: addMilestoneTemplate
      security:
        - Bearer: []
      description: Create a milestone template. Only connect manager, connect admin, and admin can access this endpoint. It also updates the `order` field of all other milestone templates in the same product template which have `order` greater than or equal to the `order` specified in the POST body.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/MilestoneTemplateBodyParam'
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '201':
          description: Returns the newly created milestone template
          schema:
            $ref: "#/definitions/MilestoneTemplateResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"

  /productTemplates/{productTemplateId}/milestones/{milestoneTemplateId}:
    parameters:
      - $ref: "#/parameters/productTemplateIdParam"
      - $ref: "#/parameters/milestoneTemplateIdParam"
    get:
      tags:
        - productMilestoneTemplate
      description: Retrieve milestone template by id. All user roles can access this endpoint.
      security:
        - Bearer: []
      responses:
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: a milestone template
          schema:
            $ref: "#/definitions/MilestoneTemplateResponse"
      operationId: getMilestoneTemplate

    patch:
      tags:
        - productMilestoneTemplate
      operationId: updateMilestoneTemplate
      security:
        - Bearer: []
      description: Update a milestone template. Only connect manager, connect admin, and admin can access this endpoint.
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '200':
          description: Successfully updated milestone template.
          schema:
            $ref: "#/definitions/MilestoneTemplateResponse"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        default:
          description: error payload
          schema:
            $ref: '#/definitions/ErrorModel'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/MilestoneTemplateBodyParam"

    delete:
      tags:
        - productMilestoneTemplate
      description: Remove an existing milestone template. Only connect manager, connect admin, and admin can access this endpoint.
      security:
        - Bearer: []
      responses:
        '403':
          description: No permission or wrong token
          schema:
            $ref: "#/definitions/ErrorModel"
        '404':
          description: Not found
          schema:
            $ref: "#/definitions/ErrorModel"
        '422':
          description: Invalid input
          schema:
            $ref: "#/definitions/ErrorModel"
        '204':
          description: Milestone template successfully removed






parameters:
  projectIdParam:
    name: projectId
    in: path
    description: project identifier
    required: true
    type: integer
    format: int64
  phaseIdParam:
    name: phaseId
    in: path
    description: project phase identifier
    required: true
    type: integer
    format: int64
    minimum: 1
  productIdParam:
    name: productId
    in: path
    description: project phase product identifier
    required: true
    type: integer
    format: int64
    minimum: 1
  templateIdParam:
    name: templateId
    in: path
    description: template identifier
    required: true
    type: integer
    format: int64
    minimum: 1
  keyParam:
    name: key
    in: path
    description: project type key
    required: true
    type: string
  timelineIdParam:
    name: timelineId
    in: path
    description: timeline identifier
    required: true
    type: integer
    format: int64
    minimum: 1
  milestoneIdParam:
    name: milestoneId
    in: path
    description: milestone identifier
    required: true
    type: integer
    format: int64
    minimum: 1
  productTemplateIdParam:
    name: productTemplateId
    in: path
    description: product template identifier
    required: true
    type: integer
    format: int64
    minimum: 1
  milestoneTemplateIdParam:
    name: milestoneTemplateId
    in: path
    description: milestone template identifier
    required: true
    type: integer
    format: int64
    minimum: 1
  offsetParam:
    name: offset
    description: "number of items to skip. Defaults to 0"
    in: query
    required: false
    type: integer
    format: int32
  limitParam:
    name: limit
    description: "max records to return. Defaults to 20"
    in: query
    required: false
    type: integer
    format: int32

definitions:
  ResponseMetadata:
    title: Metadata object for a response
    type: object
    properties:
      totalCount:
        type: integer
        format: int64
        description: Total count of the objects

  ErrorModel:
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            description: http status code
            type: integer
            format: int32
          debug:
            type: object
          content:
            type: object

  ProjectBookMark:
    title: Project bookmark
    type: object
    properties:
      title:
        type: string
      address:
        type: string

  ProjectBodyParam:
    type: object
    properties:
      param:
        $ref: "#/definitions/Project"

  ProjectUpgradeBodyParam:
    type: object
    properties:
      param:
        $ref: "#/definitions/ProjectUpgrade"

  NewProject:
    type: object
    required:
       - name
       - description
       - type
    properties:
      name:
        type: string
        description: project name (required)
      description:
        type: string
        description: Project description
      billingAccountId:
        type: number
        format: long
        description: the customer billing account id
      estimatedPrice:
        type: number
        format: float
        description: The estimated price of the project
      terms:
        type: array
        items:
          type: number
          format: integer
      external:
        type: object
        description: READ-ONLY, OPTIONAL. Refernce to external task/issue.
        properties:
          id:
            type: string
            description: Identifier for external reference
          type:
            type: string
            description: external source type
            enum: [ "github", "jira", "asana", "other"]
          data:
            type: string
            description: "300 Char length text blob for customer provided data"
      type:
        type: string
        description: project type
      bookmarks:
        type: array
        items:
          $ref: "#/definitions/ProjectBookMark"
      challengeEligibility:
        description: List of eligibility criteria (one entry per role)
        type: array
        items:
          $ref: "#/definitions/ChallengeEligibility"
      details:
        $ref: "#/definitions/ProjectDetails"
      utm:
        description: READ-ONLY. Used for tracking
        type: object
        properties:
          campaign:
            type: string
          medium:
            type: string
          source:
            type: string
      templateId:
        description: the project template identifier
        type: number
        format: long


  NewProjectBodyParam:
    type: object
    properties:
      param:
        $ref: "#/definitions/NewProject"

  ChallengeEligibility:
    description: Object describing who is eligible to work on this task
    type: object
    properties:
        role:
          type: string
          enum: ["submitter", "reviewer", "copilot"]
        users:
          type: array
          items:
            type: integer
            format: int64
        groups:
          type: array
          items:
            type: integer
            format: int64


  Project:
    type: object
    properties:
      id:
        description: unique identifier
        type: integer
        format: int64
      directProjectId:
        description: unique identifier in direct
        type: integer
        format: int64
      billingAccountId:
        type: integer
        format: int64
        description: The customer billing account id
      utm:
        description: READ-ONLY. Used for tracking
        type: object
        properties:
          campaign:
            type: string
          medium:
            type: string
          source:
            type: string
      estimatedPrice:
        type: number
        format: float
        description: The estimated price of the project
      actualPrice:
        type: number
        format: float
        description: The actual price of the project
      terms:
        type: array
        items:
          type: number
          format: integer
      name:
        type: string
        description: project name
      description:
        type: string
        description: Project description

      external:
        type: object
        description: READ-ONLY, OPTIONAL. Refernce to external task/issue.
        properties:
          id:
            type: string
            description: Identifier for external reference
          type:
            type: string
            description: external source type
            enum: [ "github", "jira", "asana", "other"]
          data:
            type: string
            description: "300 Char length text blob for customer provided data"
      type:
        type: string
        description: project type
      status:
        type: string
        description: current state of the task
        enum: ["draft", "in_review", "reviewed", "active", "paused", "cancelled", "completed"]
      cancelReason:
        type: string
        description: If a project is cancelled, define the reason of cancellation
      challengeEligibility:
        description: List of eligibility criteria (one entry per role)
        type: array
        items:
          $ref: "#/definitions/ChallengeEligibility"
      bookmarks:
        type: array
        items:
          $ref: "#/definitions/ProjectBookMark"
      members:
        description: |
          READ-ONLY. List of project members.
          Use project member api to add/remove members
        type: array
        items:
          $ref: "#/definitions/ProjectMember"
      attachments:
        description: |
          READ-ONLY. List of project attachmens.
          Use project attachment api to add/remove attachments
        type: array
        items:
          $ref: "#/definitions/ProjectAttachment"
      details:
        $ref: "#/definitions/ProjectDetails"
      templateId:
        description: the project template identifier
        type: number
        format: long

      createdAt:
        type: string
        description: Datetime (GMT) when task was created
        readOnly: true
      createdBy:
        type: integer
        format: int64
        description: READ-ONLY. User who created this task
        readOnly: true
      updatedAt:
        type: string
        description: READ-ONLY. Datetime (GMT) when task was updated
        readOnly: true
      updatedBy:
        type: integer
        format: int64
        description: READ-ONLY. User that last updated this task
        readOnly: true

  ProjectDetails:
    description: Project details
    type: object
    properties:
      summary:
        type: string
        description: text summary of the project
      TBD_usageDescription:
        type: string
        description: a description of how the app will be used
      TBD_features:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          description:
            type: string
          isCustom:
            type: boolean

  ProjectUpgrade:
    title: Project Upgrade object
    type: object
    required:
      - targetVersion
      - defaultProductTemplateId
    properties:
      targetVersion:
        type: string
        description: Version identifier
      defaultProductTemplateId:
        type: number
        format: int64
        description: Default product template id, used when the associated project template is not found, or there's no matching phase with the project's product id
      phaseName:
        type: string
        description: This value will be used instead of the product template's name for the created ProjectPhase

  NewProjectMember:
    title: Project Member object
    type: object
    required:
      - userId
      - role
    properties:
      userId:
        type: number
        format: int64
        description: user identifier
      isPrimary:
        type: boolean
        description: Flag to indicate this member is primary for specified role
      role:
        type: string
        description: member role on specified project
        enum: ["customer", "manager", "copilot"]

  NewProjectMemberBodyParam:
    type: object
    properties:
      param:
        $ref: "#/definitions/NewProjectMember"

  UpdateProjectMember:
      title: Project Member object
      type: object
      required:
        - role
      properties:
        isPrimary:
          type: boolean
          description: primary option
        role:
          type: string
          description: member role on specified project
          enum: ["customer", "manager", "copilot"]

  UpdateProjectMemberBodyParam:
    type: object
    properties:
      param:
        $ref: "#/definitions/UpdateProjectMember"

  NewProjectAttachment:
    title: Project attachment request
    type: object
    required:
      - filePath
      - s3Bucket
      - title
      - contentType
    properties:
      filePath:
        type: string
        description: path where file is stored
      s3Bucket:
        type: string
        description: The s3 bucket of attachment
      contentType:
        type: string
        description: Uploaded file content type
      title:
        type: string
        description: Name of the attachment
      description:
        type: string
        description: Optional description for the attached file.
      category:
        type: string
        description: Category of attachment
      size:
        type: number
        format: float
        description: The size of attachment

  NewProjectAttachmentBodyParam:
    type: object
    properties:
      param:
        $ref: "#/definitions/NewProjectAttachment"

  NewProjectAttachmentResponse:
    title: Project attachment object response
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          content:
            $ref: "#/definitions/ProjectAttachment"

  ProjectAttachment:
    title: Project attachment
    type: object
    properties:
      id:
        type: number
        description: unique id for the attachment
      size:
        type: number
        format: float
        description: The size of attachment
      category:
        type: string
        description: The category of attachment
      contentType:
        type: string
        description: Uploaded file content type
      title:
        type: string
        description: Name of the attachment
      description:
        type: string
        description: Optional description for the attached file.
      downloadUrl:
        type: string
        description: download link for the attachment.
      createdAt:
        type: string
        description: Datetime (GMT) when task was created
        readOnly: true
      createdBy:
        type: integer
        format: int64
        description: READ-ONLY. User who created this task
        readOnly: true
      updatedAt:
        type: string
        description: READ-ONLY. Datetime (GMT) when task was updated
        readOnly: true
      updatedBy:
        type: integer
        format: int64
        description: READ-ONLY. User that last updated this task
        readOnly: true

  ProjectMember:
    title: Project Member object
    type: object
    properties:
      id:
        type: number
        description: unique identifier for record
      userId:
        type: number
        format: int64
        description: user identifier
      isPrimary:
        type: boolean
        description: Flag to indicate this member is primary for specified role
      projectId:
        type: number
        format: int64
        description: project identifier
      role:
        type: string
        description: member role on specified project
        enum: ["customer", "manager", "copilot"]
      createdAt:
        type: string
        description: Datetime (GMT) when task was created
        readOnly: true
      createdBy:
        type: integer
        format: int64
        description: READ-ONLY. User who created this task
        readOnly: true
      updatedAt:
        type: string
        description: READ-ONLY. Datetime (GMT) when task was updated
        readOnly: true
      updatedBy:
        type: integer
        format: int64
        description: READ-ONLY. User that last updated this task
        readOnly: true



  NewProjectMemberResponse:
    title: Project member object response
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          content:
            $ref: "#/definitions/ProjectMember"

  UpdateProjectMemberResponse:
    title: Project member object response
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          content:
            $ref: "#/definitions/ProjectMember"


  ProjectResponse:
    title: Single project object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          content:
            $ref: "#/definitions/Project"

  UpdateProjectResponse:
    title: response with original and updated project object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          content:
            type: object
            properties:
              original:
                $ref: "#/definitions/Project"
              updated:
                 $ref: "#/definitions/Project"

  ProjectListResponse:
    title: List response
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/Project"

  ProjectTemplateRequest:
    title: Project template request object
    type: object
    required:
      - name
      - key
      - category
      - scope
      - phases
    properties:
      name:
        type: string
        description: the project template name
      key:
        type: string
        description: the project template key
      category:
        type: string
        description: the project template category
      scope:
        type: object
        description: the project template scope
      phases:
        type: object
        description: the project template phases

  ProjectTemplateBodyParam:
    title: Project template body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/ProjectTemplateRequest"

  ProjectTemplate:
    title: Project template object
    allOf:
      - type: object
        required:
          - id
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          id:
            type: number
            format: int64
            description: the id
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/ProjectTemplateRequest"


  ProjectTemplateResponse:
    title: Single project template response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/ProjectTemplate"

  ProjectTemplateListResponse:
    title: Project template list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/ProjectTemplate"
              
  ProductTemplateRequest:
    title: Product template request object
    type: object
    required:
      - name
      - key
      - category
      - scope
      - phases
    properties:
      name:
        type: string
        description: the product template name
      productKey:
        type: string
        description: the product template key
      icon:
        type: string
        description: the product template icon
      brief:
        type: string
        description: the product template brief
      details:
        type: string
        description: the product template details
      aliases:
        type: object
        description: the product template aliases
      template:
        type: object
        description: the product template template

  ProductTemplateBodyParam:
    title: Product template body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/ProductTemplateRequest"

  ProductTemplate:
    title: Product template object
    allOf:
      - type: object
        required:
          - id
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          id:
            type: number
            format: int64
            description: the id
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/ProductTemplateRequest"

  ProjectUpgradeResponse:
    title: Project upgrade response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"

  ProductTemplateResponse:
    title: Single product template response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/ProductTemplate"

  ProductTemplateListResponse:
    title: Product template list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/ProductTemplate"

  ProjectPhaseRequest:
    title: Project phase request object
    type: object
    required:
      - name
      - status
      - startDate
      - endDate
    properties:
      name:
        type: string
        description: the project phase name
      status:
        type: string
        description: the project phase status
      startDate:
        type: string
        format: date
        description: the project phase start date
      endDate:
        type: string
        format: date
        description: the project phase end date
      budget:
        type: number
        description: the project phase budget
      progress:
        type: number
        description: the project phase progress
      details:
        type: object
        description: the project phase details

  ProjectPhaseBodyParam:
    title: Project phase body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/ProjectPhaseRequest"

  ProjectPhase:
    title: Project phase object
    allOf:
      - type: object
        required:
          - id
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          id:
            type: number
            format: int64
            description: the id
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/ProjectPhaseRequest"


  ProjectPhaseResponse:
    title: Single project phase response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/ProjectPhase"

  ProjectPhaseListResponse:
    title: Project phase list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/ProjectPhase"


  PhaseProductRequest:
    title: Phase product request object
    type: object
    properties:
      name:
        type: string
        description: the phase product name
      directProjectId:
        type: number
        description: the phase product direct project id
      billingAccountId:
        type: number
        description: the phase product billing account Id
      templateId:
        type: number
        description: the phase product template id
      type:
        type: string
        description: the phase product type
      estimatedPrice:
        type: number
        description: the phase product estimated price
      actualPrice:
        type: number
        description: the phase product actual price
      details:
        type: object
        description: the phase product details

  PhaseProductBodyParam:
    title: Phase product body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/PhaseProductRequest"

  PhaseProduct:
    title: Phase product object
    allOf:
      - type: object
        required:
          - id
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          id:
            type: number
            format: int64
            description: the id
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/PhaseProductRequest"


  PhaseProductResponse:
    title: Single phase product response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/PhaseProduct"

  PhaseProductListResponse:
    title: Phase product list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/PhaseProduct"
              
              
              
  ProjectTypeRequest:
    title: Project type request object
    type: object
    required:
      - displayName
    properties:
      displayName:
        type: string
        description: the project type display name

  ProjectTypeBodyParam:
    title: Project type body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/ProjectTypeRequest"

  ProjectTypeCreateRequest:
    title: Project type creation request object
    type: object
    allOf:
      - type: object
        required:
          - key
        properties:
          key:
            type: string
            description: the project type key
      - $ref: "#/definitions/ProjectTypeRequest"

  ProjectTypeCreateBodyParam:
    title: Project type creation body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/ProjectTypeCreateRequest"

  ProjectType:
    title: Project type object
    allOf:
      - type: object
        required:
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          key:
            type: string
            description: the project type key
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/ProjectTypeCreateRequest"


  ProjectTypeResponse:
    title: Single project type response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/ProjectType"

  ProjectTypeListResponse:
    title: Project type list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/ProjectType"


  TimelineRequest:
    title: Timeline request object
    type: object
    required:
      - name
      - startDate
      - reference
      - referenceId
    properties:
      name:
        type: string
        description: the timeline name
      description:
        type: string
        description: the timeline description
      startDate:
        type: string
        format: date
        description: the timeline start date
      endDate:
        type: string
        format: date
        description: the timeline end date
      reference:
        type: string
        enum:
          - project
          - phase
        description: the timeline reference
      referenceId:
        type: number
        format: long
        description: the timeline reference id (project id or phase id, corresponding to the `reference`)

  TimelineBodyParam:
    title: Timeline body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/TimelineRequest"

  Timeline:
    title: Timeline object
    allOf:
      - type: object
        required:
          - id
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          id:
            type: number
            format: int64
            description: the id
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/TimelineRequest"

  TimelineResponse:
    title: Single timeline response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/Timeline"

  TimelineListResponse:
    title: Timeline list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/Timeline"

  MilestoneRequest:
    title: Milestone request object
    type: object
    required:
      - name
      - duration
      - startDate
      - status
      - type
      - order
      - plannedText
      - activeText
      - completedText
      - blockedText
    properties:
      name:
        type: string
        description: the milestone name
      description:
        type: string
        description: the milestone description
      duration:
        type: number
        format: integer
        description: the milestone duration
      startDate:
        type: string
        format: date
        description: the milestone start date
      endDate:
        type: string
        format: date
        description: the milestone end date
      completionDate:
        type: string
        format: date
        description: the milestone completion date
      status:
        type: string
        description: the milestone status
      type:
        type: string
        description: the milestone type
      details:
        type: object
        description: the milestone details
      order:
        type: number
        format: integer
        description: the milestone order
      plannedText:
        type: string
        description: the milestone planned text
      activeText:
        type: string
        description: the milestone active text
      completedText:
        type: string
        description: the milestone completed text
      blockedText:
        type: string
        description: the milestone blocked text

  MilestoneBodyParam:
    title: Milestone body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/MilestoneRequest"

  Milestone:
    title: Milestone object
    allOf:
      - type: object
        required:
          - id
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          id:
            type: number
            format: int64
            description: the id
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/MilestoneRequest"

  MilestoneResponse:
    title: Single milestone response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/Milestone"

  MilestoneListResponse:
    title: Milestone list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/Milestone"


  MilestoneTemplateRequest:
    title: Milestone template request object
    type: object
    required:
      - name
      - duration
      - type
      - order
    properties:
      name:
        type: string
        description: the milestone template name
      description:
        type: string
        description: the milestone template description
      duration:
        type: number
        format: integer
        description: the milestone template duration
      type:
        type: string
        description: the milestone template type
      order:
        type: number
        format: integer
        description: the milestone template order

  MilestoneTemplateBodyParam:
    title: Milestone template body param
    type: object
    required:
      - param
    properties:
      param:
        $ref: "#/definitions/MilestoneTemplateRequest"

  MilestoneTemplate:
    title: Milestone template object
    allOf:
      - type: object
        required:
          - id
          - createdAt
          - createdBy
          - updatedAt
          - updatedBy
        properties:
          id:
            type: number
            format: int64
            description: the id
          createdAt:
            type: string
            description: Datetime (GMT) when object was created
            readOnly: true
          createdBy:
            type: integer
            format: int64
            description: READ-ONLY. User who created this object
            readOnly: true
          updatedAt:
            type: string
            description: READ-ONLY. Datetime (GMT) when object was updated
            readOnly: true
          updatedBy:
            type: integer
            format: int64
            description: READ-ONLY. User that last updated this object
            readOnly: true
      - $ref: "#/definitions/MilestoneTemplateRequest"

  MilestoneTemplateResponse:
    title: Single milestone template response object
    type: object
    properties:
      id:
        type: string
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            $ref: "#/definitions/MilestoneTemplate"

  MilestoneTemplateListResponse:
    title: Milestone template list response object
    type: object
    properties:
      id:
        type: string
        readOnly: true
        description: unique id identifying the request
      version:
        type: string
      result:
        type: object
        properties:
          success:
            type: boolean
          status:
            type: string
            description: http status code
          metadata:
            $ref: "#/definitions/ResponseMetadata"
          content:
            type: array
            items:
              $ref: "#/definitions/MilestoneTemplate"
