version: "2"
services:
  jsonserver:
    build: "../mock-services"
    ports:
      - "3001:3001"
  db:
    build: "../postgres-db"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_USER=coder
      - POSTGRES_MULTIPLE_DATABASES=projectsdb,projectsdb_test,tc_notifications
  esearch:
    image: "elasticsearch:2.3"
    ports:
      - "9200:9200"
      - "9300:9300"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      zk_id: "1"
  kafka:
    image: wurstmeister/kafka
    container_name: tc-projects-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  kafka-client:
    build: ./kafka-client
    depends_on:
      - kafka
      - zookeeper
  tc-bus-api:
    build:
      context: ./generic-tc-service
      args:
        NODE_VERSION: 8.11.3
        GIT_URL: https://github.com/topcoder-platform/tc-bus-api
        GIT_BRANCH: dev
        BYPASS_TOKEN_VALIDATION: 1
    command: start kafka-client
    expose:
      - "3000"
    ports:
      - "8002:3000"
    depends_on:
      - kafka-client
    environment:
      - PORT=3000
      - KAFKA_URL=kafka:9093
      - JWT_TOKEN_SECRET=secret
      - VALID_ISSUERS="[\"https://topcoder-newauth.auth0.com/\",\"https://api.topcoder-dev.com\"]"
      - AUTH0_CLIENT_ID
      - AUTH0_CLIENT_SECRET
      - AUTH0_URL
      - AUTH0_AUDIENCE
      - AUTH0_PROXY_SERVER_URL
  project-processor-es:
    build:
      context: ./generic-tc-service
      args:
        NODE_VERSION: 8.11.3
        GIT_URL: https://github.com/topcoder-platform/project-processor-es
        GIT_BRANCH: develop
    command: start kafka-client
    expose:
      - "5000"
    ports:
      - "5000:5000"
    depends_on:
      - kafka-client
    environment:
      - PORT=5000
      - KAFKA_URL=kafka:9093
      - ES_HOST=esearch:9200
      - AUTH0_CLIENT_ID
      - AUTH0_CLIENT_SECRET
      - AUTH0_URL
      - AUTH0_AUDIENCE
      - AUTH0_PROXY_SERVER_URL
  tc-notifications-reset-db:
    extends:
      file: ./docker-compose.base.yml
      service: tc-notifications-base
    command: reset:db
    restart: on-failure
    expose:
      - "4002"
    ports:
      - "4002:4002"
    depends_on:
      - db
    environment:
      - PORT=4002
  tc-notifications-processor:
    extends:
      file: ./docker-compose.base.yml
      service: tc-notifications-base
    command: start kafka-client
    depends_on:
      - tc-notifications-reset-db
      - kafka-client
    expose:
      - "4001"
    ports:
      - "4001:4001"
    environment:
      - PORT=4001
  tc-notifications-api:
    extends:
      file: ./docker-compose.base.yml
      service: tc-notifications-base
    command: startAPI kafka-client
    depends_on:
      - tc-notifications-reset-db
      - kafka-client
    expose:
      - "4000"
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
